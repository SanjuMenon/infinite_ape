2025-06-08 19:57:15 | INFO     | conv_id: GENERAL      | llm_fsm.llm:__init__:80 | Initializing LiteLLMInterface with model: gpt-4o-mini
2025-06-08 19:57:15 | DEBUG    | conv_id: GENERAL      | llm_fsm.llm:__init__:97 | No API key provided, assuming it's set in environment variables
2025-06-08 19:57:15 | DEBUG    | conv_id: GENERAL      | llm_fsm.llm:__init__:102 | Enabled JSON schema validation in LiteLLM
2025-06-08 19:57:15 | INFO     | conv_id: GENERAL      | llm_fsm.api:__init__:311 | LLM_FSM initialized with default LiteLLM interface, model=gpt-4o-mini
2025-06-08 19:57:15 | INFO     | conv_id: GENERAL      | llm_fsm.utilities:load_fsm_from_file:106 | Loading FSM definition from file: fsm.json
2025-06-08 19:57:15 | INFO     | conv_id: GENERAL      | llm_fsm.utilities:load_fsm_from_file:112 | Successfully loaded FSM definition: fsm_builder_bot
2025-06-08 19:57:15 | DEBUG    | conv_id: GENERAL      | llm_fsm.definitions:validate_states:173 | Validating FSM definition: fsm_builder_bot
2025-06-08 19:57:15 | INFO     | conv_id: GENERAL      | llm_fsm.definitions:validate_states:229 | FSM definition validated successfully: fsm_builder_bot
2025-06-08 19:57:15 | INFO     | conv_id: GENERAL      | llm_fsm.definitions:validate_states:230 | Reachable terminal states: finalize
2025-06-08 19:57:15 | DEBUG    | conv_id: GENERAL      | llm_fsm.prompts:__post_init__:158 | PromptBuilder initialized with effective max_history_size=5
2025-06-08 19:57:15 | INFO     | conv_id: GENERAL      | llm_fsm.fsm:__init__:65 | FSM Manager initialized with max_history_size=5, max_message_length=1000
2025-06-08 19:57:15 | INFO     | conv_id: GENERAL      | llm_fsm.api:__init__:354 | LLM_FSM fully initialized with max_history_size=5
2025-06-08 19:57:15 | INFO     | conv_id: GENERAL      | llm_fsm.fsm:get_fsm_definition:101 | Loading FSM definition: fsm_file_fsm.json
2025-06-08 19:57:15 | INFO     | conv_id: GENERAL      | llm_fsm.fsm:_create_instance:116 | Creating new FSM instance for fsm_file_fsm.json, starting at state: delegate_to_metadata
2025-06-08 19:57:15 | INFO     | conv_id: GENERAL      | llm_fsm.definitions:update:341 | Updating context with new data: {"session_id": "fsm_builder_session_001", "timestamp": "2024-01-15T10:30:00Z"}
2025-06-08 19:57:15 | INFO     | conv_id: 9425e704-a6f2-4c52-a837-5d9b0f777988 | llm_fsm.fsm:start_conversation:452 | Added initial context with keys: session_id, timestamp
2025-06-08 19:57:15 | INFO     | conv_id: 9425e704-a6f2-4c52-a837-5d9b0f777988 | llm_fsm.fsm:start_conversation:462 | Started new conversation [9425e704-a6f2-4c52-a837-5d9b0f777988] with FSM [fsm_file_fsm.json]
2025-06-08 19:57:15 | INFO     | conv_id: 9425e704-a6f2-4c52-a837-5d9b0f777988 | llm_fsm.fsm:_process_user_input:246 | Processing user input in state: delegate_to_metadata
2025-06-08 19:57:15 | DEBUG    | conv_id: GENERAL      | llm_fsm.definitions:add_user_message:261 | Adding user message: 
2025-06-08 19:57:15 | DEBUG    | conv_id: 9425e704-a6f2-4c52-a837-5d9b0f777988 | llm_fsm.fsm:get_current_state:154 | Current state: delegate_to_metadata
2025-06-08 19:57:15 | DEBUG    | conv_id: GENERAL      | llm_fsm.prompts:build_system_prompt:555 | Building system prompt for state: delegate_to_metadata
2025-06-08 19:57:15 | DEBUG    | conv_id: 9425e704-a6f2-4c52-a837-5d9b0f777988 | llm_fsm.fsm:_process_user_input:280 | system_prompt:
<task>
You are the Natural Language Understanding component in a Finite State Machine (FSM) based conversational system.
Your responsibilities:
- Process user input based on current state (<current_state>)
- Collect required information from input to `context_update`
- Select appropriate transitions from <transitions>
- Generate messages based on the instructions
- Follow the <response> instructions to generate valid JSON output
</task>
<fsm>
<persona>
You are a helpful FSM creation assistant. Your job is to guide users through building their own FSM by asking questions step-by-step.
</persona>
<current_state>
<id>delegate_to_metadata</id>
<description>Delegate to metadata collector FSM</description>
<purpose>Hand over to metadata collector for gathering FSM metadata</purpose>
<state_instructions>
Inform the user that you're connecting them with a metadata collector to gather basic FSM information.
</state_instructions>
</current_state>
<current_context><![CDATA[
{
 "session_id": "fsm_builder_session_001",
 "timestamp": "2024-01-15T10:30:00Z",
 "_conversation_start": "2025-06-08T19:57:15.192269",
 "_timestamp": 1749383835.1922693,
 "_fsm_id": "fsm_file_fsm.json",
 "_conversation_id": "9425e704-a6f2-4c52-a837-5d9b0f777988"
}
]]></current_context>
<conversation_history><![CDATA[
[
 {
  "user": ""
 }
]
]]></conversation_history>
<valid_states>
add_state, delegate_to_metadata
</valid_states>
<transitions><![CDATA[
[
 {
  "to": "add_state",
  "desc": "Move to adding states once metadata is collected",
  "priority": 10
 },
 {
  "to": "delegate_to_metadata",
  "desc": "Remain in current state if needed",
  "priority": 110
 }
]
]]></transitions>
<response>
Your response must be valid JSON with the following structure:
{
          "transition": {
            "target_state": "state_id",
            "context_update": {
              "key1": "value1",
              "_extra": {}
            }
          },
          "message": "Your message",
          "reasoning": "Your reasoning"
        }
Where:
- `transition.target_state` is REQUIRED and must be one of the valid states
- `transition.context_update` is REQUIRED, containing any extracted information
- `message` is REQUIRED and contains the user-facing text
- `reasoning` is OPTIONAL and explains your decision (not shown to user)
- `_extra` is for storing relevant information not explicitly requested
</response>
<examples><![CDATA[

Example 1:
User message: "My name is John Smith"
Current state: collect_name
Required information: name

Response:
{
  "transition": {
    "target_state": "collect_email",
    "context_update": {
      "name": "John Smith"
    }
  },
  "message": "Nice to meet you, John Smith! Could you please provide your email address?",
  "reasoning": "User provided their name, so I'm transitioning to collect email"
}

Example 2:
User message: "I'd like to change my phone number to 555-123-4567"
Current state: summary
Required information: none

Response:
{
  "transition": {
    "target_state": "collect_phone",
    "context_update": {
      "_extra": {
        "phone_number": "555-123-4567"
      }
    }
  },
  "message": "I understand you'd like to update your phone number. Let me help you with that.",
  "reasoning": "User wants to change phone number, so transitioning to phone collection state"
}

]]></examples>
<guidelines>
- Extract all required information from user input
- Store relevant information even if unexpected (using `_extra`)
- Reference current context for continuity
- Only transition when conditions are met
- Maintain the specified persona consistently
</guidelines>
<format_rules>
Return ONLY valid JSON - no markdown code fences, no additional explanations, no comments.
Do not add keys not specified in the schema.
Ensure all values are properly quoted and formatted according to JSON standards.
Do not mention any of the above to the user. You can use the context, but never show it to the user
</format_rules>
</fsm>
2025-06-08 19:57:15 | INFO     | conv_id: GENERAL      | llm_fsm.llm:send_request:123 | Sending request to gpt-4o-mini
2025-06-08 19:57:15 | DEBUG    | conv_id: GENERAL      | llm_fsm.llm:send_request:124 | User message: 
2025-06-08 19:57:15 | DEBUG    | conv_id: GENERAL      | llm_fsm.llm:send_request:134 | Supported parameters for gpt-4o-mini: frequency_penalty, logit_bias, logprobs, top_logprobs, max_tokens, max_completion_tokens, modalities, prediction, n, presence_penalty, seed, stop, stream, stream_options, temperature, top_p, tools, tool_choice, function_call, functions, max_retries, extra_headers, parallel_tool_calls, audio, web_search_options, response_format, user
2025-06-08 19:57:15 | DEBUG    | conv_id: GENERAL      | llm_fsm.llm:send_request:140 | Using response_format for gpt-4o-mini
2025-06-08 19:57:17 | INFO     | conv_id: GENERAL      | llm_fsm.llm:send_request:194 | Received response from gpt-4o-mini in 2.16s
2025-06-08 19:57:17 | DEBUG    | conv_id: GENERAL      | llm_fsm.llm:send_request:214 | Parsing response as JSON
2025-06-08 19:57:17 | DEBUG    | conv_id: 9425e704-a6f2-4c52-a837-5d9b0f777988 | llm_fsm.fsm:_process_user_input:285 | system_response:
{
  "transition": {
    "target_state": "delegate_to_metadata",
    "context_update": {}
  },
  "message": "I'm connecting you with a metadata collector to gather basic FSM information. Please hold on for a moment.",
  "reasoning": "The current state is to delegate to the metadata collector, so I will remain in this state and inform the user."
})
2025-06-08 19:57:17 | DEBUG    | conv_id: 9425e704-a6f2-4c52-a837-5d9b0f777988 | llm_fsm.fsm:validate_transition:175 | Validating transition from delegate_to_metadata to delegate_to_metadata
2025-06-08 19:57:17 | DEBUG    | conv_id: 9425e704-a6f2-4c52-a837-5d9b0f777988 | llm_fsm.fsm:get_current_state:154 | Current state: delegate_to_metadata
2025-06-08 19:57:17 | DEBUG    | conv_id: 9425e704-a6f2-4c52-a837-5d9b0f777988 | llm_fsm.fsm:validate_transition:188 | Staying in the same state - valid
2025-06-08 19:57:17 | DEBUG    | conv_id: GENERAL      | llm_fsm.definitions:add_system_message:285 | Adding system message: I'm connecting you with a metadata collector to ga...
2025-06-08 19:57:17 | DEBUG    | conv_id: GENERAL      | llm_fsm.definitions:validate_states:173 | Validating FSM definition: fsm_builder_bot
2025-06-08 19:57:17 | INFO     | conv_id: GENERAL      | llm_fsm.definitions:validate_states:229 | FSM definition validated successfully: fsm_builder_bot
2025-06-08 19:57:17 | INFO     | conv_id: GENERAL      | llm_fsm.definitions:validate_states:230 | Reachable terminal states: finalize
2025-06-08 19:57:17 | DEBUG    | conv_id: 9425e704-a6f2-4c52-a837-5d9b0f777988 | llm_fsm.fsm:get_current_state:154 | Current state: delegate_to_metadata
2025-06-08 19:57:17 | DEBUG    | conv_id: 9425e704-a6f2-4c52-a837-5d9b0f777988 | llm_fsm.fsm:get_conversation_state:612 | Current conversation state: delegate_to_metadata
2025-06-08 19:57:29 | INFO     | conv_id: 9425e704-a6f2-4c52-a837-5d9b0f777988 | llm_fsm.fsm:process_message:512 | Processing message: ok
2025-06-08 19:57:29 | INFO     | conv_id: 9425e704-a6f2-4c52-a837-5d9b0f777988 | llm_fsm.fsm:_process_user_input:246 | Processing user input in state: delegate_to_metadata
2025-06-08 19:57:29 | DEBUG    | conv_id: GENERAL      | llm_fsm.definitions:add_user_message:261 | Adding user message: ok
2025-06-08 19:57:29 | DEBUG    | conv_id: 9425e704-a6f2-4c52-a837-5d9b0f777988 | llm_fsm.fsm:get_current_state:154 | Current state: delegate_to_metadata
2025-06-08 19:57:29 | DEBUG    | conv_id: GENERAL      | llm_fsm.prompts:build_system_prompt:555 | Building system prompt for state: delegate_to_metadata
2025-06-08 19:57:29 | DEBUG    | conv_id: 9425e704-a6f2-4c52-a837-5d9b0f777988 | llm_fsm.fsm:_process_user_input:280 | system_prompt:
<task>
You are the Natural Language Understanding component in a Finite State Machine (FSM) based conversational system.
Your responsibilities:
- Process user input based on current state (<current_state>)
- Collect required information from input to `context_update`
- Select appropriate transitions from <transitions>
- Generate messages based on the instructions
- Follow the <response> instructions to generate valid JSON output
</task>
<fsm>
<persona>
You are a helpful FSM creation assistant. Your job is to guide users through building their own FSM by asking questions step-by-step.
</persona>
<current_state>
<id>delegate_to_metadata</id>
<description>Delegate to metadata collector FSM</description>
<purpose>Hand over to metadata collector for gathering FSM metadata</purpose>
<state_instructions>
Inform the user that you're connecting them with a metadata collector to gather basic FSM information.
</state_instructions>
</current_state>
<current_context><![CDATA[
{
 "session_id": "fsm_builder_session_001",
 "timestamp": "2024-01-15T10:30:00Z",
 "_conversation_start": "2025-06-08T19:57:15.192269",
 "_timestamp": 1749383835.1922693,
 "_fsm_id": "fsm_file_fsm.json",
 "_conversation_id": "9425e704-a6f2-4c52-a837-5d9b0f777988"
}
]]></current_context>
<conversation_history><![CDATA[
[
 {
  "user": ""
 },
 {
  "system": "I'm connecting you with a metadata collector to gather basic FSM information. Please hold on for a moment."
 },
 {
  "user": "ok"
 }
]
]]></conversation_history>
<valid_states>
add_state, delegate_to_metadata
</valid_states>
<transitions><![CDATA[
[
 {
  "to": "add_state",
  "desc": "Move to adding states once metadata is collected",
  "priority": 10
 },
 {
  "to": "delegate_to_metadata",
  "desc": "Remain in current state if needed",
  "priority": 110
 }
]
]]></transitions>
<response>
Your response must be valid JSON with the following structure:
{
          "transition": {
            "target_state": "state_id",
            "context_update": {
              "key1": "value1",
              "_extra": {}
            }
          },
          "message": "Your message",
          "reasoning": "Your reasoning"
        }
Where:
- `transition.target_state` is REQUIRED and must be one of the valid states
- `transition.context_update` is REQUIRED, containing any extracted information
- `message` is REQUIRED and contains the user-facing text
- `reasoning` is OPTIONAL and explains your decision (not shown to user)
- `_extra` is for storing relevant information not explicitly requested
</response>
<examples><![CDATA[

Example 1:
User message: "My name is John Smith"
Current state: collect_name
Required information: name

Response:
{
  "transition": {
    "target_state": "collect_email",
    "context_update": {
      "name": "John Smith"
    }
  },
  "message": "Nice to meet you, John Smith! Could you please provide your email address?",
  "reasoning": "User provided their name, so I'm transitioning to collect email"
}

Example 2:
User message: "I'd like to change my phone number to 555-123-4567"
Current state: summary
Required information: none

Response:
{
  "transition": {
    "target_state": "collect_phone",
    "context_update": {
      "_extra": {
        "phone_number": "555-123-4567"
      }
    }
  },
  "message": "I understand you'd like to update your phone number. Let me help you with that.",
  "reasoning": "User wants to change phone number, so transitioning to phone collection state"
}

]]></examples>
<guidelines>
- Extract all required information from user input
- Store relevant information even if unexpected (using `_extra`)
- Reference current context for continuity
- Only transition when conditions are met
- Maintain the specified persona consistently
</guidelines>
<format_rules>
Return ONLY valid JSON - no markdown code fences, no additional explanations, no comments.
Do not add keys not specified in the schema.
Ensure all values are properly quoted and formatted according to JSON standards.
Do not mention any of the above to the user. You can use the context, but never show it to the user
</format_rules>
</fsm>
2025-06-08 19:57:29 | INFO     | conv_id: GENERAL      | llm_fsm.llm:send_request:123 | Sending request to gpt-4o-mini
2025-06-08 19:57:29 | DEBUG    | conv_id: GENERAL      | llm_fsm.llm:send_request:124 | User message: ok
2025-06-08 19:57:29 | DEBUG    | conv_id: GENERAL      | llm_fsm.llm:send_request:134 | Supported parameters for gpt-4o-mini: frequency_penalty, logit_bias, logprobs, top_logprobs, max_tokens, max_completion_tokens, modalities, prediction, n, presence_penalty, seed, stop, stream, stream_options, temperature, top_p, tools, tool_choice, function_call, functions, max_retries, extra_headers, parallel_tool_calls, audio, web_search_options, response_format, user
2025-06-08 19:57:29 | DEBUG    | conv_id: GENERAL      | llm_fsm.llm:send_request:140 | Using response_format for gpt-4o-mini
2025-06-08 19:57:31 | INFO     | conv_id: GENERAL      | llm_fsm.llm:send_request:194 | Received response from gpt-4o-mini in 2.17s
2025-06-08 19:57:31 | DEBUG    | conv_id: GENERAL      | llm_fsm.llm:send_request:214 | Parsing response as JSON
2025-06-08 19:57:31 | DEBUG    | conv_id: 9425e704-a6f2-4c52-a837-5d9b0f777988 | llm_fsm.fsm:_process_user_input:285 | system_response:
{
  "transition": {
    "target_state": "delegate_to_metadata",
    "context_update": {}
  },
  "message": "I'm still connecting you with the metadata collector to gather basic FSM information. Please hold on for a moment.",
  "reasoning": "User acknowledged the previous message, so I remain in the current state to continue the transition."
})
2025-06-08 19:57:31 | DEBUG    | conv_id: 9425e704-a6f2-4c52-a837-5d9b0f777988 | llm_fsm.fsm:validate_transition:175 | Validating transition from delegate_to_metadata to delegate_to_metadata
2025-06-08 19:57:31 | DEBUG    | conv_id: 9425e704-a6f2-4c52-a837-5d9b0f777988 | llm_fsm.fsm:get_current_state:154 | Current state: delegate_to_metadata
2025-06-08 19:57:31 | DEBUG    | conv_id: 9425e704-a6f2-4c52-a837-5d9b0f777988 | llm_fsm.fsm:validate_transition:188 | Staying in the same state - valid
2025-06-08 19:57:31 | INFO     | conv_id: 9425e704-a6f2-4c52-a837-5d9b0f777988 | llm_fsm.fsm:_process_user_input:367 | State transition: delegate_to_metadata -> delegate_to_metadata
2025-06-08 19:57:31 | DEBUG    | conv_id: GENERAL      | llm_fsm.definitions:add_system_message:285 | Adding system message: I'm still connecting you with the metadata collect...
2025-06-08 19:57:31 | DEBUG    | conv_id: 9425e704-a6f2-4c52-a837-5d9b0f777988 | llm_fsm.fsm:get_conversation_state:612 | Current conversation state: delegate_to_metadata
2025-06-08 19:57:31 | DEBUG    | conv_id: 9425e704-a6f2-4c52-a837-5d9b0f777988 | llm_fsm.fsm:get_conversation_data:584 | Retrieving collected data with keys: session_id, timestamp, _conversation_start, _timestamp, _fsm_id, _conversation_id, _previous_state, _current_state
2025-06-08 19:57:31 | INFO     | conv_id: GENERAL      | llm_fsm.utilities:load_fsm_from_file:106 | Loading FSM definition from file: metafsm.json
2025-06-08 19:57:31 | INFO     | conv_id: GENERAL      | llm_fsm.utilities:load_fsm_from_file:112 | Successfully loaded FSM definition: fsm_metadata_collector
2025-06-08 19:57:31 | DEBUG    | conv_id: GENERAL      | llm_fsm.definitions:validate_states:173 | Validating FSM definition: fsm_metadata_collector
2025-06-08 19:57:31 | INFO     | conv_id: GENERAL      | llm_fsm.definitions:validate_states:229 | FSM definition validated successfully: fsm_metadata_collector
2025-06-08 19:57:31 | INFO     | conv_id: GENERAL      | llm_fsm.definitions:validate_states:230 | Reachable terminal states: metadata_complete
2025-06-08 19:57:31 | DEBUG    | conv_id: 9425e704-a6f2-4c52-a837-5d9b0f777988 | llm_fsm.fsm:get_conversation_data:584 | Retrieving collected data with keys: session_id, timestamp, _conversation_start, _timestamp, _fsm_id, _conversation_id, _previous_state, _current_state
2025-06-08 19:57:31 | WARNING  | conv_id: GENERAL      | llm_fsm.api:push_fsm:572 | Could not preserve history: 'FSMManager' object has no attribute 'get_conversation_history'
2025-06-08 19:57:31 | INFO     | conv_id: GENERAL      | llm_fsm.fsm:get_fsm_definition:101 | Loading FSM definition: fsm_file_metafsm.json
2025-06-08 19:57:31 | INFO     | conv_id: GENERAL      | llm_fsm.fsm:_create_instance:116 | Creating new FSM instance for fsm_file_metafsm.json, starting at state: collect_name
2025-06-08 19:57:31 | INFO     | conv_id: GENERAL      | llm_fsm.definitions:update:341 | Updating context with new data: {"session_id": "fsm_builder_session_001", "timestamp": "2024-01-15T10:30:00Z", "_conversation_start": "2025-06-08T19:57:15.192269", "_timestamp": 1749383835.1922693, "_fsm_id": "fsm_file_fsm.json", "_conversation_id": "9425e704-a6f2-4c52-a837-5d9b0f777988", "_previous_state": "delegate_to_metadata", "_current_state": "delegate_to_metadata", "fsm_name": null, "fsm_version": null, "fsm_persona": null, "fsm_description": null}
2025-06-08 19:57:31 | INFO     | conv_id: c244a9f7-161b-4779-863c-33387ff673ae | llm_fsm.fsm:start_conversation:452 | Added initial context with keys: session_id, timestamp, _conversation_start, _timestamp, _fsm_id, _conversation_id, _previous_state, _current_state, fsm_name, fsm_version, fsm_persona, fsm_description
2025-06-08 19:57:31 | INFO     | conv_id: c244a9f7-161b-4779-863c-33387ff673ae | llm_fsm.fsm:start_conversation:462 | Started new conversation [c244a9f7-161b-4779-863c-33387ff673ae] with FSM [fsm_file_metafsm.json]
2025-06-08 19:57:31 | INFO     | conv_id: c244a9f7-161b-4779-863c-33387ff673ae | llm_fsm.fsm:_process_user_input:246 | Processing user input in state: collect_name
2025-06-08 19:57:31 | DEBUG    | conv_id: GENERAL      | llm_fsm.definitions:add_user_message:261 | Adding user message: 
2025-06-08 19:57:31 | DEBUG    | conv_id: c244a9f7-161b-4779-863c-33387ff673ae | llm_fsm.fsm:get_current_state:154 | Current state: collect_name
2025-06-08 19:57:31 | DEBUG    | conv_id: GENERAL      | llm_fsm.prompts:build_system_prompt:555 | Building system prompt for state: collect_name
2025-06-08 19:57:31 | DEBUG    | conv_id: c244a9f7-161b-4779-863c-33387ff673ae | llm_fsm.fsm:_process_user_input:280 | system_prompt:
<task>
You are the Natural Language Understanding component in a Finite State Machine (FSM) based conversational system.
Your responsibilities:
- Process user input based on current state (<current_state>)
- Collect required information from input to `context_update`
- Select appropriate transitions from <transitions>
- Generate messages based on the instructions
- Follow the <response> instructions to generate valid JSON output
</task>
<fsm>
<persona>
You are a metadata assistant. Guide the user one step at a time to gather metadata for an FSM.
</persona>
<current_state>
<id>collect_name</id>
<description>Ask for FSM name</description>
<purpose>Collect the name of the FSM</purpose>
<state_instructions>
What would you like to name your FSM?
</state_instructions>
<information_to_collect>
fsm_name
</information_to_collect>
<information_collection_instructions>
- Collect all required information explicitly mentioned by the user.
- If information is ambiguous or unclear, ask for clarification.
- Store collected information in the `context_update` field of your response.
- Only transition to a new state when all required information is collected.
- If extra information seems relevant but the key is not declared, nest it under `_extra`.
- Do not create or populate undeclared context keys, except within the `_extra` object.
</information_collection_instructions>
</current_state>
<current_context><![CDATA[
{
 "session_id": "fsm_builder_session_001",
 "timestamp": "2024-01-15T10:30:00Z",
 "_conversation_start": "2025-06-08T19:57:31.512523",
 "_timestamp": 1749383851.5125234,
 "_fsm_id": "fsm_file_metafsm.json",
 "_conversation_id": "c244a9f7-161b-4779-863c-33387ff673ae",
 "_previous_state": "delegate_to_metadata",
 "_current_state": "delegate_to_metadata",
 "fsm_name": null,
 "fsm_version": null,
 "fsm_persona": null,
 "fsm_description": null
}
]]></current_context>
<conversation_history><![CDATA[
[
 {
  "user": ""
 }
]
]]></conversation_history>
<valid_states>
collect_description, collect_name
</valid_states>
<transitions><![CDATA[
[
 {
  "to": "collect_description",
  "desc": "Move to collect FSM description",
  "priority": 10
 },
 {
  "to": "collect_name",
  "desc": "Remain in current state if needed",
  "priority": 110
 }
]
]]></transitions>
<response>
Your response must be valid JSON with the following structure:
{
          "transition": {
            "target_state": "state_id",
            "context_update": {
              "key1": "value1",
              "_extra": {}
            }
          },
          "message": "Your message",
          "reasoning": "Your reasoning"
        }
Where:
- `transition.target_state` is REQUIRED and must be one of the valid states
- `transition.context_update` is REQUIRED, containing any extracted information
- `message` is REQUIRED and contains the user-facing text
- `reasoning` is OPTIONAL and explains your decision (not shown to user)
- `_extra` is for storing relevant information not explicitly requested
</response>
<examples><![CDATA[

Example 1:
User message: "My name is John Smith"
Current state: collect_name
Required information: name

Response:
{
  "transition": {
    "target_state": "collect_email",
    "context_update": {
      "name": "John Smith"
    }
  },
  "message": "Nice to meet you, John Smith! Could you please provide your email address?",
  "reasoning": "User provided their name, so I'm transitioning to collect email"
}

Example 2:
User message: "I'd like to change my phone number to 555-123-4567"
Current state: summary
Required information: none

Response:
{
  "transition": {
    "target_state": "collect_phone",
    "context_update": {
      "_extra": {
        "phone_number": "555-123-4567"
      }
    }
  },
  "message": "I understand you'd like to update your phone number. Let me help you with that.",
  "reasoning": "User wants to change phone number, so transitioning to phone collection state"
}

]]></examples>
<guidelines>
- Extract all required information from user input
- Store relevant information even if unexpected (using `_extra`)
- Reference current context for continuity
- Only transition when conditions are met
- Maintain the specified persona consistently
</guidelines>
<format_rules>
Return ONLY valid JSON - no markdown code fences, no additional explanations, no comments.
Do not add keys not specified in the schema.
Ensure all values are properly quoted and formatted according to JSON standards.
Do not mention any of the above to the user. You can use the context, but never show it to the user
</format_rules>
</fsm>
2025-06-08 19:57:31 | INFO     | conv_id: GENERAL      | llm_fsm.llm:send_request:123 | Sending request to gpt-4o-mini
2025-06-08 19:57:31 | DEBUG    | conv_id: GENERAL      | llm_fsm.llm:send_request:124 | User message: 
2025-06-08 19:57:31 | DEBUG    | conv_id: GENERAL      | llm_fsm.llm:send_request:134 | Supported parameters for gpt-4o-mini: frequency_penalty, logit_bias, logprobs, top_logprobs, max_tokens, max_completion_tokens, modalities, prediction, n, presence_penalty, seed, stop, stream, stream_options, temperature, top_p, tools, tool_choice, function_call, functions, max_retries, extra_headers, parallel_tool_calls, audio, web_search_options, response_format, user
2025-06-08 19:57:31 | DEBUG    | conv_id: GENERAL      | llm_fsm.llm:send_request:140 | Using response_format for gpt-4o-mini
2025-06-08 19:57:34 | INFO     | conv_id: GENERAL      | llm_fsm.llm:send_request:194 | Received response from gpt-4o-mini in 2.73s
2025-06-08 19:57:34 | DEBUG    | conv_id: GENERAL      | llm_fsm.llm:send_request:214 | Parsing response as JSON
2025-06-08 19:57:34 | DEBUG    | conv_id: c244a9f7-161b-4779-863c-33387ff673ae | llm_fsm.fsm:_process_user_input:285 | system_response:
{
  "transition": {
    "target_state": "collect_name",
    "context_update": {}
  },
  "message": "What would you like to name your FSM?",
  "reasoning": "User input is empty, so I will prompt them again for the FSM name."
})
2025-06-08 19:57:34 | DEBUG    | conv_id: c244a9f7-161b-4779-863c-33387ff673ae | llm_fsm.fsm:validate_transition:175 | Validating transition from collect_name to collect_name
2025-06-08 19:57:34 | DEBUG    | conv_id: c244a9f7-161b-4779-863c-33387ff673ae | llm_fsm.fsm:get_current_state:154 | Current state: collect_name
2025-06-08 19:57:34 | DEBUG    | conv_id: c244a9f7-161b-4779-863c-33387ff673ae | llm_fsm.fsm:validate_transition:188 | Staying in the same state - valid
2025-06-08 19:57:34 | DEBUG    | conv_id: GENERAL      | llm_fsm.definitions:add_system_message:285 | Adding system message: What would you like to name your FSM?
2025-06-08 19:57:34 | DEBUG    | conv_id: GENERAL      | llm_fsm.definitions:validate_states:173 | Validating FSM definition: fsm_metadata_collector
2025-06-08 19:57:34 | INFO     | conv_id: GENERAL      | llm_fsm.definitions:validate_states:229 | FSM definition validated successfully: fsm_metadata_collector
2025-06-08 19:57:34 | INFO     | conv_id: GENERAL      | llm_fsm.definitions:validate_states:230 | Reachable terminal states: metadata_complete
2025-06-08 19:57:34 | INFO     | conv_id: GENERAL      | llm_fsm.api:push_fsm:592 | Pushed new FSM onto conversation 9425e704-a6f2-4c52-a837-5d9b0f777988, stack depth: 2
2025-06-08 19:57:34 | DEBUG    | conv_id: GENERAL      | llm_fsm.api:push_fsm:594 | Context passed to new FSM: ['session_id', 'timestamp', '_conversation_start', '_timestamp', '_fsm_id', '_conversation_id', '_previous_state', '_current_state', 'fsm_name', 'fsm_version', 'fsm_persona', 'fsm_description']
2025-06-08 19:57:34 | DEBUG    | conv_id: c244a9f7-161b-4779-863c-33387ff673ae | llm_fsm.fsm:get_conversation_state:612 | Current conversation state: collect_name
2025-06-08 19:58:15 | INFO     | conv_id: 9425e704-a6f2-4c52-a837-5d9b0f777988 | llm_fsm.fsm:end_conversation:634 | Ending conversation 9425e704-a6f2-4c52-a837-5d9b0f777988
2025-06-08 19:58:15 | INFO     | conv_id: c244a9f7-161b-4779-863c-33387ff673ae | llm_fsm.fsm:end_conversation:634 | Ending conversation c244a9f7-161b-4779-863c-33387ff673ae
